generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  passwordConfirm     String
  passwordChangedAt   DateTime?
  passwordResetToken  String?
  passwordResetExpires DateTime?
  active              Boolean     @default(true)
  role      UserRole @default(Customer)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String      @id @default(uuid()) @db.Uuid
  name        String
  description String
  price       Decimal     @db.Decimal
  category    String
  stock       Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]

  @@index([category])
}

model Customer {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  address   String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id         String      @id @default(uuid()) @db.Uuid
  customerId String      @db.Uuid
  orderDate  DateTime    @default(now())
  status     OrderStatus
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  customer   Customer    @relation(fields: [customerId], references: [id])
  items      OrderItem[]
}

model OrderItem {
  id              String   @id @default(uuid()) @db.Uuid
  orderId         String   @db.Uuid
  productId       String   @db.Uuid
  quantity        Int
  priceAtPurchase Decimal  @db.Decimal
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  order           Order    @relation(fields: [orderId], references: [id])
  product         Product  @relation(fields: [productId], references: [id])
}

enum UserRole {
  Admin
  Customer
}

enum OrderStatus {
  Pending
  Shipped
  Delivered
  Cancelled
}
